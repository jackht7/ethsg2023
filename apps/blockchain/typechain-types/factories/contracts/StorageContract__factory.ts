/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StorageContract,
  StorageContractInterface,
} from "../../contracts/StorageContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "approveRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getRequests",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "txId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool",
          },
          {
            internalType: "enum StorageContract.ProjectStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
        ],
        internalType: "struct StorageContract.Request[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_juniorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seniorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_clientAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_ipfsHash",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "project",
    outputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "juniorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "seniorAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "clientAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "rejectRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum StorageContract.ProjectStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600860006101000a81548160ff021916908360028111156200002d576200002c62000209565b5b02179055503480156200003f57600080fd5b5062000060620000546200007660201b60201c565b6200007e60201b60201c565b620000706200014360201b60201c565b6200031c565b600033905090565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff161562000196576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018d90620002bf565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff1614620002075760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620001fe9190620002ff565b60405180910390a15b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b6000620002a760278362000238565b9150620002b48262000249565b604082019050919050565b60006020820190508181036000830152620002da8162000298565b9050919050565b600060ff82169050919050565b620002f981620002e1565b82525050565b6000602082019050620003166000830184620002ee565b92915050565b611d11806200032c6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063966dae0e11610066578063966dae0e14610135578063d67ee9c614610153578063f2ac14081461016f578063f2fde38b1461018b578063f60ca60d146101a75761009e565b8063200d2ed2146100a3578063715018a6146100c1578063804e44f3146100cb5780638c83d66c146100fb5780638da5cb5b14610117575b600080fd5b6100ab6101ca565b6040516100b89190610fe3565b60405180910390f35b6100c96101dd565b005b6100e560048036038101906100e09190611066565b6101f1565b6040516100f2919061129e565b60405180910390f35b61011560048036038101906101109190611351565b6103a1565b005b61011f6104bf565b60405161012c91906113c0565b60405180910390f35b61013d6104e8565b60405161014a91906113c0565b60405180910390f35b61016d60048036038101906101689190611431565b61050e565b005b61018960048036038101906101849190611351565b610844565b005b6101a560048036038101906101a09190611066565b610ab4565b005b6101af610b37565b6040516101c19695949392919061154c565b60405180910390f35b600860009054906101000a900460ff1681565b6101e5610c49565b6101ef6000610cc7565b565b60606000600167ffffffffffffffff8111156102105761020f6115b4565b5b60405190808252806020026020018201604052801561024957816020015b610236610f29565b81526020019060019003908161022e5790505b5090506040518060a001604052806002600001548152602001600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615158152602001600860009054906101000a900460ff1660028111156102d8576102d7610f6c565b5b81526020016002600101548152602001600260050180546102f890611612565b80601f016020809104026020016040519081016040528092919081815260200182805461032490611612565b80156103715780601f1061034657610100808354040283529160200191610371565b820191906000526020600020905b81548152906001019060200180831161035457829003601f168201915b50505050508152508160008151811061038d5761038c611643565b5b602002602001018190525080915050919050565b600260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104505750600260030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61048f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610486906116be565b60405180910390fd5b6002600860006101000a81548160ff021916908360028111156104b5576104b4610f6c565b5b0217905550505050565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060019054906101000a900460ff1615905080801561053f5750600160008054906101000a900460ff1660ff16105b8061056c575061054e30610d8c565b15801561056b5750600160008054906101000a900460ff1660ff16145b5b6105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a290611750565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156105e8576001600060016101000a81548160ff0219169083151502179055505b6040518060c001604052808a81526020018981526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152506002600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a082015181600501908161079b919061191c565b5090505083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156108395760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516108309190611a36565b60405180910390a15b505050505050505050565b600260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108f35750600260030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610932576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610929906116be565b60405180910390fd5b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060096000600260040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610a76575060096000600260030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b15610aaf576001600860006101000a81548160ff02191690836002811115610aa157610aa0610f6c565b5b0217905550610aae610daf565b5b505050565b610abc610c49565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2290611ac3565b60405180910390fd5b610b3481610cc7565b50565b60028060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806005018054610bc690611612565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf290611612565b8015610c3f5780601f10610c1457610100808354040283529160200191610c3f565b820191906000526020600020905b815481529060010190602001808311610c2257829003601f168201915b5050505050905086565b610c51610f21565b73ffffffffffffffffffffffffffffffffffffffff16610c6f6104bf565b73ffffffffffffffffffffffffffffffffffffffff1614610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc90611b2f565b60405180910390fd5b565b60008060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000600260000154306002600501604051602401610dcf93929190611bd3565b6040516020818303038152906040527ff626cf2c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610e979190611c58565b6000604051808303816000865af19150503d8060008114610ed4576040519150601f19603f3d011682016040523d82523d6000602084013e610ed9565b606091505b5050905080610f1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1490611cbb565b60405180910390fd5b5050565b600033905090565b6040518060a001604052806000815260200160001515815260200160006002811115610f5857610f57610f6c565b5b815260200160008152602001606081525090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610fac57610fab610f6c565b5b50565b6000819050610fbd82610f9b565b919050565b6000610fcd82610faf565b9050919050565b610fdd81610fc2565b82525050565b6000602082019050610ff86000830184610fd4565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103382611008565b9050919050565b61104381611028565b811461104e57600080fd5b50565b6000813590506110608161103a565b92915050565b60006020828403121561107c5761107b610ffe565b5b600061108a84828501611051565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6110d2816110bf565b82525050565b60008115159050919050565b6110ed816110d8565b82525050565b6110fc81610fc2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561113c578082015181840152602081019050611121565b60008484015250505050565b6000601f19601f8301169050919050565b600061116482611102565b61116e818561110d565b935061117e81856020860161111e565b61118781611148565b840191505092915050565b600060a0830160008301516111aa60008601826110c9565b5060208301516111bd60208601826110e4565b5060408301516111d060408601826110f3565b5060608301516111e360608601826110c9565b50608083015184820360808601526111fb8282611159565b9150508091505092915050565b60006112148383611192565b905092915050565b6000602082019050919050565b600061123482611093565b61123e818561109e565b935083602082028501611250856110af565b8060005b8581101561128c578484038952815161126d8582611208565b94506112788361121c565b925060208a01995050600181019050611254565b50829750879550505050505092915050565b600060208201905081810360008301526112b88184611229565b905092915050565b6112c9816110bf565b81146112d457600080fd5b50565b6000813590506112e6816112c0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611311576113106112ec565b5b8235905067ffffffffffffffff81111561132e5761132d6112f1565b5b60208301915083600182028301111561134a576113496112f6565b5b9250929050565b60008060006040848603121561136a57611369610ffe565b5b6000611378868287016112d7565b935050602084013567ffffffffffffffff81111561139957611398611003565b5b6113a5868287016112fb565b92509250509250925092565b6113ba81611028565b82525050565b60006020820190506113d560008301846113b1565b92915050565b60008083601f8401126113f1576113f06112ec565b5b8235905067ffffffffffffffff81111561140e5761140d6112f1565b5b60208301915083600182028301111561142a576114296112f6565b5b9250929050565b60008060008060008060008060e0898b03121561145157611450610ffe565b5b600061145f8b828c016112d7565b98505060206114708b828c016112d7565b97505060406114818b828c01611051565b96505060606114928b828c01611051565b95505060806114a38b828c01611051565b94505060a06114b48b828c01611051565b93505060c089013567ffffffffffffffff8111156114d5576114d4611003565b5b6114e18b828c016113db565b92509250509295985092959890939650565b6114fc816110bf565b82525050565b600082825260208201905092915050565b600061151e82611102565b6115288185611502565b935061153881856020860161111e565b61154181611148565b840191505092915050565b600060c08201905061156160008301896114f3565b61156e60208301886114f3565b61157b60408301876113b1565b61158860608301866113b1565b61159560808301856113b1565b81810360a08301526115a78184611513565b9050979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061162a57607f821691505b60208210810361163d5761163c6115e3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b60006116a8600c83611502565b91506116b382611672565b602082019050919050565b600060208201905081810360008301526116d78161169b565b9050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b600061173a602e83611502565b9150611745826116de565b604082019050919050565b600060208201905081810360008301526117698161172d565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026117d27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611795565b6117dc8683611795565b95508019841693508086168417925050509392505050565b6000819050919050565b600061181961181461180f846110bf565b6117f4565b6110bf565b9050919050565b6000819050919050565b611833836117fe565b61184761183f82611820565b8484546117a2565b825550505050565b600090565b61185c61184f565b61186781848461182a565b505050565b5b8181101561188b57611880600082611854565b60018101905061186d565b5050565b601f8211156118d0576118a181611770565b6118aa84611785565b810160208510156118b9578190505b6118cd6118c585611785565b83018261186c565b50505b505050565b600082821c905092915050565b60006118f3600019846008026118d5565b1980831691505092915050565b600061190c83836118e2565b9150826002028217905092915050565b61192582611102565b67ffffffffffffffff81111561193e5761193d6115b4565b5b6119488254611612565b61195382828561188f565b600060209050601f8311600181146119865760008415611974578287015190505b61197e8582611900565b8655506119e6565b601f19841661199486611770565b60005b828110156119bc57848901518255600182019150602085019450602081019050611997565b868310156119d957848901516119d5601f8916826118e2565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b600060ff82169050919050565b6000611a20611a1b611a16846119ee565b6117f4565b6119f8565b9050919050565b611a3081611a05565b82525050565b6000602082019050611a4b6000830184611a27565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611aad602683611502565b9150611ab882611a51565b604082019050919050565b60006020820190508181036000830152611adc81611aa0565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611b19602083611502565b9150611b2482611ae3565b602082019050919050565b60006020820190508181036000830152611b4881611b0c565b9050919050565b60008154611b5c81611612565b611b668186611502565b94506001821660008114611b815760018114611b9757611bca565b60ff198316865281151560200286019350611bca565b611ba085611770565b60005b83811015611bc257815481890152600182019150602081019050611ba3565b808801955050505b50505092915050565b6000606082019050611be860008301866114f3565b611bf560208301856113b1565b8181036040830152611c078184611b4f565b9050949350505050565b600081519050919050565b600081905092915050565b6000611c3282611c11565b611c3c8185611c1c565b9350611c4c81856020860161111e565b80840191505092915050565b6000611c648284611c27565b915081905092915050565b7f6d696e74696e67206661696c6564000000000000000000000000000000000000600082015250565b6000611ca5600e83611502565b9150611cb082611c6f565b602082019050919050565b60006020820190508181036000830152611cd481611c98565b905091905056fea26469706673582212208fe37d03279cde3561cea6c2748e3c16663dae7ccb72f3a9551356980dc58f9564736f6c63430008110033";

type StorageContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StorageContract__factory extends ContractFactory {
  constructor(...args: StorageContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StorageContract> {
    return super.deploy(overrides || {}) as Promise<StorageContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StorageContract {
    return super.attach(address) as StorageContract;
  }
  override connect(signer: Signer): StorageContract__factory {
    return super.connect(signer) as StorageContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageContractInterface {
    return new utils.Interface(_abi) as StorageContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StorageContract {
    return new Contract(address, _abi, signerOrProvider) as StorageContract;
  }
}
